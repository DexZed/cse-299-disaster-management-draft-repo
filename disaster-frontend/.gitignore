# Learn more https://docs.github.com/en/get-started/getting-started-with-git/ignoring-files

# dependencies
node_modules/

# Expo
.expo/
dist/
web-build/
expo-env.d.ts

# Native
.kotlin/
*.orig.*
*.jks
*.p8
*.p12
*.key
*.mobileprovision

# Metro
.metro-health-check*

# debug
npm-debug.*
yarn-debug.*
yarn-error.*

# macOS
.DS_Store
*.pem

# local env files
.env*.local

# typescript
*.tsbuildinfo

app-example

# generated native folders
/ios
/android
# Node modules
node_modules/

# Expo specific directories and files
.expo/
# The .expo/ directory contains temporary files and build artifacts
# that are not meant to be committed to version control.

# Local environment variables
.env
.env.*.local
# Sensitive information like API keys or database credentials should
# be stored in local environment variables and not committed.

# Operating System and Editor specific files
.DS_Store
Thumbs.db
*.bak
*.swp
# Files generated by operating systems or text editors that are not
# part of the project's source code.

# Build output directories (if you eject or use prebuild)
android/
ios/
# If you are using a bare workflow or have prebuilt your project,
# these directories contain platform-specific native code and should
# generally be ignored unless you are directly managing native code.

# EAS build specific files
# .easignore can be used for ignoring files specifically for EAS builds,
# but if you don't use it, you might want to consider adding build artifacts here.
# For example, if you have any custom build output directories.

# Other common ignored files
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
# Log files generated during development or by package managers.